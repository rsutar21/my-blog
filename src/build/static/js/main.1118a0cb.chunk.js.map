{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/ArticleContent.js","components/ArticleList.js","components/CommentList.js","components/AddCommentForm.js","components/AddUpvotes.js","common/PageNotFound.js","pages/ArticlePage.js","pages/ArticleListPage.js","common/NavigationLink.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticleList","map","article","key","to","substring","CommentsList","comments","comment","className","username","text","AddCommentForm","articleName","setArticleInfo","useState","setUserName","setComment","addComment","a","fetch","method","headers","body","JSON","stringify","result","json","id","type","value","onChange","event","target","row","column","onClick","AddUpvotes","upvotes","upvoteArticle","NotFoundPage","ArticlePage","match","params","ArticleContent","find","otherArticles","filter","articleInfo","useEffect","fetchData","paragraph","CommentList","ArticleListPage","NavigationLink","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1118a0cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => (\r\n  <>\r\n    <h1>Web Development</h1>\r\n    <p>\r\n    Welcome to Web Development learning!! As you are going to learn full stack it is very important to know what to learn.\r\n    </p>\r\n\r\n    <p>\r\n    I have mentioned some major things that needed to be learned to be called a good full stack developer. It is a very long course because you have to master front-end as well as back-end.\r\n    </p>\r\n\r\n    <p>Here is the list:<br/>\r\n    <ul>\r\n      <li>HTML5</li>\r\n      <li>CSS3 and Bootstrap</li>\r\n      <li>JavaScript</li>\r\n      <li>Node.js, PHP</li>\r\n      <li>Database Design using MySQL, Mongodb</li>\r\n      <li>Git and Version Control</li>\r\n    </ul>\r\n    </p>\r\n    \r\n  </>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <>\r\n    <h1>Where you can learn and measure</h1>\r\n    <p>\r\n    Whether you already have a website or you're just getting started, learn to build for the modern web at web.dev. Then, apply your new skills and solutions to any personal or professional site you work on.\r\n    </p>\r\n\r\n    <p>\r\n    After you've launched your site, come back to web.dev and measure how well it supports your users. If there are areas where it can improve, you'll get immediate steps to increase your metrics.\r\n    </p>\r\n\r\n    <p>\r\n    As the web advances, users' expectations get higher. With web.dev's guidance, you can give your users the best possible experience, wherever they are.\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default AboutPage;\r\n","const articles = [\r\n  {\r\n    name: \"learn-react\",\r\n    title: \"Intro to React\",\r\n    content: [\r\n      `You can see what we’ll be building here: Final Result. If the code doesn’t make sense to you, or if you are unfamiliar with the code’s syntax, don’t worry! The goal of this tutorial is to help you understand React and its syntax`,\r\n\r\n      `We recommend that you check out the tic-tac-toe game before continuing with the tutorial. One of the features that you’ll notice is that there is a numbered list to the right of the game’s board. This list gives you a history of all of the moves that have occurred in the game, and it is updated as the game progresses.`,\r\n\r\n      `You can close the tic-tac-toe game once you’re familiar with it. We’ll be starting from a simpler template in this tutorial. Our next step is to set you up so that you can start building the game.`\r\n    ]\r\n  },\r\n  {\r\n    name: \"learn-node\",\r\n    title: \"How to Build a Node Server \",\r\n    content: [\r\n      `JavaScript has been the most popular programming language for the last 6 years. The powerful Node.js runtime environment has been ranked the technology most commonly used by professional developers. Node.js is an event-driven JavaScript runtime. Node has myriad potential uses for JavaScript development including being a great environment for building efficient network applications`,\r\n\r\n      `This course is a great introduction to the concepts of server-side web development. You’ll learn the different parts that make up the back-end of a website or web application, and you’ll gain familiarity with the Node.js runtime environment. After this course, you’ll be set up to explore popular Node frameworks like Express.js to build powerful applications.`,\r\n\r\n      `A strong foundation in JavaScript is a prerequisite for this course. Previous experience with asynchronous JavaScript would be helpful but isn’t mandatory.`\r\n    ]\r\n  },\r\n  {\r\n    name: \"learn-mongodb\",\r\n    title: \"MongoDB Tutorial\",\r\n    content: [\r\n      `MongoDB is a cross-platform, document oriented database that provides, high performance, high availability, and easy scalability. MongoDB works on concept of collection and document`,\r\n\r\n      `Database is a physical container for collections. Each database gets its own set of files on the file system. A single MongoDB server typically has multiple databases.`,\r\n\r\n      `Collection is a group of MongoDB documents. It is the equivalent of an RDBMS table. A collection exists within a single database. Collections do not enforce a schema. Documents within a collection can have different fields. Typically, all documents in a collection are of similar or related purpose.`\r\n    ]\r\n  }\r\n];\r\n\r\nexport default articles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ArticleList = ({ articles }) => (\r\n  <>\r\n    {articles.map((article, key) => (\r\n      <Link key={key} to={`/articles/${article.name}`}>\r\n        <h3>{article.title}</h3>\r\n        <p>{article.content[0].substring(0, 150)}...</p>\r\n      </Link>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default ArticleList;\r\n","import React from \"react\";\r\n\r\nconst CommentsList = ({ comments }) => (\r\n  <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key) => (\r\n      <div className=\"comment\" key={key}>\r\n        <h4>{comment.username}</h4>\r\n        <p>{comment.text}</p>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default CommentsList;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n\tconst [username, setUserName] = useState('');\r\n\tconst [text, setComment] = useState('');\r\n\r\n\tconst addComment = async () => {\r\n\t\tconst result = await fetch(`/api/articles/${articleName}/add-comment/`, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({username, text})\r\n\t\t}); \r\n\t\tconst body = await result.json();\r\n\t\tsetArticleInfo(body);\r\n\t\tsetUserName('');\r\n\t\tsetComment('');\r\n\t}\r\n\r\n  return (\r\n\t\t<div id=\"add-comment-form\">\r\n\t\t\t<h3>Add Comment</h3>\r\n\t\t\t<label>Name :\r\n\t\t\t\t<input type=\"text\" value={username} onChange={(event) => setUserName(event.target.value)} />\r\n\t\t\t</label>\r\n\t\t\t<label>Comment: \r\n\t\t\t\t<textarea row=\"4\" column=\"50\" value={text} onChange={(event) => setComment(event.target.value)} />\r\n\t\t\t</label>\r\n\t\t\t<button onClick={() => addComment() }>Add Comment</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React from \"react\";\r\n\r\nconst AddUpvotes = ({ articleName, upvotes, setArticleInfo }) => {\r\n  const upvoteArticle = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n      method: \"post\"\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <button onClick={() => upvoteArticle()}>Add Upvotes</button>\r\n      <p>This post has been upvoted {upvotes} times.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUpvotes;\r\n","\r\nimport React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React, { useState, useEffect } from \"react\";\r\nimport ArticleContent from \"./ArticleContent\";\r\nimport ArticleList from \"../components/ArticleList\";\r\nimport CommentList from \"../components/CommentList\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\nimport AddUpvotes from \"../components/AddUpvotes\";\r\nimport NotPageFound from \"../common/PageNotFound\";\r\n\r\nconst ArticlePage = ({ match }) => {\r\n  const name = match.params.name;\r\n  const article = ArticleContent.find(article => article.name === name);\r\n  const otherArticles = ArticleContent.filter(article => article.name !== name);\r\n\r\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comment: [] });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/articles/${name}`);\r\n      const body = await result.json();\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [name]);\r\n\r\n  if (!article) return <NotPageFound />;\r\n\r\n  return (\r\n    <>\r\n      <h1>{article.title}</h1>\r\n      <AddUpvotes\r\n        articleName={name}\r\n        upvotes={articleInfo.upvotes}\r\n        setArticleInfo={setArticleInfo}\r\n      />\r\n\r\n      {article.content.map((paragraph, key) => (\r\n        <p key={key}> {paragraph} </p>\r\n      ))}\r\n\r\n      <h3>Other Articles : </h3>\r\n\r\n      <ArticleList articles={otherArticles} />\r\n\r\n      <CommentList comments={articleInfo.comment} />\r\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticlePage;\r\n","import React from \"react\";\r\nimport ArticleContent from \"./ArticleContent\";\r\nimport ArticleList from \"../components/ArticleList\";\r\n\r\nconst ArticleListPage = () => {\r\n  return (\r\n    <>\r\n      <h1>Article List</h1>\r\n      <ArticleList articles={ArticleContent} />\r\n    </>\r\n  );\r\n};\r\nexport default ArticleListPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavigationLink = () => (\r\n  <>\r\n    <nav>\r\n      <ul>\r\n        <li><Link to=\"/\">Home</Link></li>\r\n        <li><Link to=\"/about\">About</Link></li>\r\n        <li><Link to=\"/articles-list\">Articles List</Link></li>\r\n      </ul>\r\n    </nav>\r\n  </>\r\n);\r\n\r\nexport default NavigationLink;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport NavigationLink from \"./common/NavigationLink\";\nimport NotFoundPage from \"./common/PageNotFound\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavigationLink />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles/:name\" component={ArticlePage} />\n            <Route path=\"/articles-list\" component={ArticleListPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}